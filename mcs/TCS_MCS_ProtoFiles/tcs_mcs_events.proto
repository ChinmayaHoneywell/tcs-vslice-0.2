syntax = "proto3";

package eventpoc;
import "google/protobuf/timestamp.proto";
option java_package = "org.tmt.tcs.mcs.MCShcd.msgTransformers.protos";
option java_outer_classname = "TcsMcsEventsProtos";


message TcsPositionDemandEvent {
  double azimuth = 1; // azimuth position
  double elevation = 2; // elevation position
  google.protobuf.Timestamp tpkPublishTime = 3; // time at which tpk event sampled
  google.protobuf.Timestamp assemblyReceivalTime=4;
  google.protobuf.Timestamp hcdReceivalTime=5;
}
message TcsHeartbeat{
	 int32 sequence = 1;
}
message McsHealth{
	enum Health {
		Good = 0;
		Ill = 1;
		Bad = 2;
		interlocked = 3;
		unknown =4;
	}
	Health health = 1;
	string reason = 2;
	google.protobuf.Timestamp time = 3; 
}
message McsAlarm{ 
	 string source = 1;
	enum Category{
		emerg = 0;
		alert = 1;
		crit = 2;
		err = 3;
		warning = 4;
		notice = 5;
	}
	Category category = 2;
	enum Severity{
		major = 0;
		minor = 1;
		normal = 2;
	}	
	 Severity severity = 3;
	 string reason = 4;
	 google.protobuf.Timestamp time = 5;
}
message McsDriveStatus{ 
	 bool processing = 1;
	enum Lifecycle {
		ready = 0;
		loaded = 1;
		initialized = 2;
		running = 3;
	}
	 Lifecycle lifecycle = 2;
	enum Azstate{
		az_drive_power_off = 0;
		az_servo_off = 1;
		az_pointing = 2;
		az_servo_off_datumned = 3;
		az_pointing_datumned = 4;
		az_following = 5;
		az_faulted = 6;
	}
	 Azstate azstate = 3;
	enum Elstate{
		el_drive_power_off = 0;
		el_servo_off = 1;
		el_pointing = 2;
		el_servo_off_datumned = 3;
		el_pointing_datumned = 4;
		el_following = 5;
		el_faulted = 6;
	}
	 Elstate elstate = 4;
	 bool azMotorTemps = 5;
	 bool elMotorTemps = 6;
	 bool azAmplTemps = 7;
	 bool elAmplTemps = 8;
	 bool azLimits = 9;
	 bool elLimits = 10;
	 bool mcsDiagEnabled = 11;
	enum ServoTestMon{
		None = 0; 
		AzPosn = 1;
		AzMaxVal = 2;
		AzMinVal = 3;
		ElPosn = 4;
		ElMaxVal = 5;
		ElMinVal = 6;
	}
	 ServoTestMon servoTestMon = 12;
	enum Local{ 
		local = 0;
		remote = 1;
	}
	 Local local_Enum = 13;
	enum ControlRight{
		MCU = 0;
		AZ_Drv1 = 1;
		az_drv2 = 2;
		el_drv1 = 3;
		el_drv2 = 4;
		eui1 = 5;
		eui2 = 6;
		eui3 = 7;
		eui4 = 8; 
		eui5 = 9;
	}
	 ControlRight controlRight = 14;
	enum AzDriveMode{
		az_standby = 0;
		az_pointing_mode = 1;
		az_slewing  = 2;
		az_following_mode = 3;
	}
	 AzDriveMode azDriveMode = 15;
	enum ElDriveMode{
		el_standby = 0;
		el_pointing_mode = 1;
		el_slewing = 2;
		el_following_mode = 3;
	}
	 ElDriveMode elDriveMode = 16;
	 bool azBrakeReleased = 17;
	 bool elBrakeReleased = 18;
	 bool azWrapBrakeReleased = 19;
	 bool azServoOnOpn = 20;
	 bool azServoOnRdy = 21;
	 bool elServoOnOpn = 22;
	 bool elServoOnRdy = 23;
	 bool azLimitRecoveryOpn = 24;
	 bool azLimitRecoveryRdy = 25;
	 bool elLimitRecoveryOpn = 26;
	 bool elLimitRecoveryRdy = 27;
	 bool azWrapServoOnOpn = 28;
	 bool wrapServoOnRdy = 29;
	 bool wrapLimitRecoveryOpn = 30;
	 bool wrapLimitRecoveryRdy = 31;
	 bool azOverlap = 32;
	 bool azAbsIncDeviationLimit = 33;
	 bool elAbsIncDeviationLimit = 34;
	 bool azEncdrUnitInitFin =35;
	 bool elEncdrUnitInitFin =36;
	 bool absEncdrUnitInitFin =37;
	 bool azDatumOpn = 38;
	 bool elDatumOpn = 39;
	 bool azDatumRun = 40;
	 bool elDatumRun = 41;
	 bool azDatumRdy = 42;
	 bool elDatumRdy = 43;
	 bool azEncdrDatumed = 44;
	 bool elEncdrDatumed = 45;
	 bool azEncdrHeadNotUsed = 46;
	 bool elEncdrHeadNotUsed = 47;
	 bool azAbsEncdrNotUsed = 48;
	 bool elAbsEncdrNotUsed = 49;
	 bool azAmplNotUsed = 50;
	 bool elAmplNotUsed = 51;
	 bool stowPosnOpn = 52;
	 bool stowPosnRun = 53;
	 bool stowPosnRdy = 54;
	 bool stowInsrOpn = 55;
	 bool stowInsrRun = 56;
	 bool stowInsrRdy = 57;
	 bool stowRetrOpn = 58;
	 bool stowRetrRun = 59;
	 bool stowRetrRdy = 60;
	 bool azTapeEncdrDataLeapDet = 61;
	 bool elTapeEncdrDataLeapDet = 62;
	 bool azAbsEncdrDataLeapDet = 63;
	// bool azMotorTemps = 64;
	// bool elMotorTemps = 64;
	 google.protobuf.Timestamp time = 64;
}
message MountControlDiags{
	  bool mcsInPosition = 1;
	  bool azInPosition = 2;
	  bool elInPosition = 3; 
	  double azPosition = 4;
	  double elPosition = 5;
	  double azPosDemand = 6;
	  double elPosDemand = 7;
	  double azPosError = 8; 
	  double elPosError = 9;
	  double azVelocity = 10;
	  double elVelocity = 11;
	  double azVelocityDemand = 12;
	  double elVelocityDemand = 13;
	  double azVelocityError = 14;
	  double elVelocityError = 15;
	  double azAcceleration = 16;
	  double elAcceleration = 17;
	  double azTorqueDemand = 18;	
	  double elTorqueDemand = 19;
	  int32 azEncoderPositions = 20;
	  int32 elEncoderPositions = 21;	
	  float azDriveCurrents = 22;
	  float elDriveCurrents = 23;
	  google.protobuf.Timestamp encoderLatchingTime = 24;
	  double azWrapPos = 25;
	  double azWrapPosDemand = 26;
	  double azWrapPosError = 27;
	  double azWrapVelocity = 28;
	  double azWrapVelocityDemand = 29;
	  double azWrapVelocityError = 30;
	  double azWrapAcceleration = 31;
	  double azWrapTorqueDemand = 32;
	  float azWrapDriveCurrents = 33;
	  double azPosXp = 34;
	  double azPosXm = 35;
	  double elPosXp = 36;
	  double elPosXm = 37;
	  double azPosByHead = 38;
	  double elPosByHead = 39;
	  int32 azNumOfStoredDemand = 40;
	  int32 elNumOfStoredDemand = 41;
	  int32 eibTriggerCounter = 42;
	  int32 eibStatusWord = 43;
	  google.protobuf.Timestamp eibTimestamp = 44;
	  int64 eibReferencePosition1 = 45;
	  int64 eibDCReferencePosition = 46;
	  double azPosByAbs = 47;
	  double elPosByAbs = 48;
	  double azPosErrA = 49;
	  double azPosErrB = 50;
	  double elPosErrA = 51;
	  double elPosErrB = 52;
	  double azPosTestInput = 53;
	  double elPosTestInput = 54;
	  double azMaxVelTestInput = 55;
	  double elMaxVelTestInput = 56;
	  double azMinVelTestInput = 57;
	  double elMinVelTestInput = 58;
	  double azTrqTestInput = 59;
	  double elTrqTestInput = 60;
	  google.protobuf.Timestamp time = 61;			
}
message McsCurrentPositionEvent {
  // conjunction of azInPosition and elInPosition
   bool mcsInPosition = 1;
   double azPos = 2;
   double azPosDemand = 3;
   double azPosError = 4;
   bool azInPosition = 5;
   double elPos = 6;
   double elPosDemand = 7;
   double elPosError = 8;
   bool elInPosition = 9;
   google.protobuf.Timestamp encodeLatchingTime = 10;
   int32 azPosDmdErrCount = 11;
   int32 elPosDmdErrCount = 12;
   double azWrapPos = 13;
   double azWrapPosDemand = 14;
   double azWrapPosError = 15;
   google.protobuf.Timestamp time = 16;
}
